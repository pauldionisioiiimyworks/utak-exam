{"ast":null,"code":"import { firebase } from '../index';\n\n/**\n * An immutable object representing an array of bytes.\n */\nexport class Bytes {\n  /**\n   * @hideconstructor\n   * @param {firebase.firestore.Blob} blob\n   */\n  constructor(blob) {\n    this._blob = blob;\n  }\n\n  /**\n   * @param {string} base64\n   * @returns {Bytes}\n   */\n  static fromBase64String(base64) {\n    return new Bytes(firebase.firestore.Blob.fromBase64String(base64));\n  }\n\n  /**\n   * @param {Uint8Array} array\n   * @returns {Bytes}\n   */\n  static fromUint8Array(array) {\n    return new Bytes(firebase.firestore.Blob.fromUint8Array(array));\n  }\n\n  /**\n   * @returns {string}\n   */\n  toBase64() {\n    return this._blob.toBase64();\n  }\n\n  /**\n   * @returns {Uint8Array}\n   */\n  toUint8Array() {\n    return this._blob.toUint8Array();\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return 'Bytes(base64: ' + this.toBase64() + ')';\n  }\n\n  /**\n   * @param {Bytes} other\n   * @returns {boolean}\n   */\n  isEqual(other) {\n    return this._blob.isEqual(other._blob);\n  }\n}","map":{"version":3,"names":["firebase","Bytes","constructor","blob","_blob","fromBase64String","base64","firestore","Blob","fromUint8Array","array","toBase64","toUint8Array","toString","isEqual","other"],"sources":["/Users/pauldionisio/Documents/CS/utak/utak-exam-app/node_modules/@react-native-firebase/firestore/lib/modular/Bytes.js"],"sourcesContent":["import { firebase } from '../index';\n\n/**\n * An immutable object representing an array of bytes.\n */\nexport class Bytes {\n  /**\n   * @hideconstructor\n   * @param {firebase.firestore.Blob} blob\n   */\n  constructor(blob) {\n    this._blob = blob;\n  }\n\n  /**\n   * @param {string} base64\n   * @returns {Bytes}\n   */\n  static fromBase64String(base64) {\n    return new Bytes(firebase.firestore.Blob.fromBase64String(base64));\n  }\n\n  /**\n   * @param {Uint8Array} array\n   * @returns {Bytes}\n   */\n  static fromUint8Array(array) {\n    return new Bytes(firebase.firestore.Blob.fromUint8Array(array));\n  }\n\n  /**\n   * @returns {string}\n   */\n  toBase64() {\n    return this._blob.toBase64();\n  }\n\n  /**\n   * @returns {Uint8Array}\n   */\n  toUint8Array() {\n    return this._blob.toUint8Array();\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return 'Bytes(base64: ' + this.toBase64() + ')';\n  }\n\n  /**\n   * @param {Bytes} other\n   * @returns {boolean}\n   */\n  isEqual(other) {\n    return this._blob.isEqual(other._blob);\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,UAAU;;AAEnC;AACA;AACA;AACA,OAAO,MAAMC,KAAK,CAAC;EACjB;AACF;AACA;AACA;EACEC,WAAWA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACC,KAAK,GAAGD,IAAI;EACnB;;EAEA;AACF;AACA;AACA;EACE,OAAOE,gBAAgBA,CAACC,MAAM,EAAE;IAC9B,OAAO,IAAIL,KAAK,CAACD,QAAQ,CAACO,SAAS,CAACC,IAAI,CAACH,gBAAgB,CAACC,MAAM,CAAC,CAAC;EACpE;;EAEA;AACF;AACA;AACA;EACE,OAAOG,cAAcA,CAACC,KAAK,EAAE;IAC3B,OAAO,IAAIT,KAAK,CAACD,QAAQ,CAACO,SAAS,CAACC,IAAI,CAACC,cAAc,CAACC,KAAK,CAAC,CAAC;EACjE;;EAEA;AACF;AACA;EACEC,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACP,KAAK,CAACO,QAAQ,CAAC,CAAC;EAC9B;;EAEA;AACF;AACA;EACEC,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACR,KAAK,CAACQ,YAAY,CAAC,CAAC;EAClC;;EAEA;AACF;AACA;EACEC,QAAQA,CAAA,EAAG;IACT,OAAO,gBAAgB,GAAG,IAAI,CAACF,QAAQ,CAAC,CAAC,GAAG,GAAG;EACjD;;EAEA;AACF;AACA;AACA;EACEG,OAAOA,CAACC,KAAK,EAAE;IACb,OAAO,IAAI,CAACX,KAAK,CAACU,OAAO,CAACC,KAAK,CAACX,KAAK,CAAC;EACxC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}