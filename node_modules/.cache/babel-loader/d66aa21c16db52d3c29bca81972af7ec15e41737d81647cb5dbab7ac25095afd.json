{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { NativeEventEmitter, NativeModules } from 'react-native';\nconst {\n  RNFBAppModule\n} = NativeModules;\nclass RNFBNativeEventEmitter extends NativeEventEmitter {\n  constructor() {\n    super(RNFBAppModule);\n    this.ready = false;\n  }\n  addListener(eventType, listener, context) {\n    if (!this.ready) {\n      RNFBAppModule.eventsNotifyReady(true);\n      this.ready = true;\n    }\n    RNFBAppModule.eventsAddListener(eventType);\n    let subscription = super.addListener(`rnfb_${eventType}`, listener, context);\n\n    // React Native 0.65+ altered EventEmitter:\n    // - removeSubscription is gone\n    // - addListener returns an unsubscriber instead of a more complex object with eventType etc\n\n    // make sure eventType for backwards compatibility just in case\n    subscription.eventType = `rnfb_${eventType}`;\n\n    // New style is to return a remove function on the object, just in csae people call that,\n    // we will modify it to do our native unsubscription then call the original\n    let originalRemove = subscription.remove;\n    let newRemove = () => {\n      RNFBAppModule.eventsRemoveListener(eventType, false);\n      if (super.removeSubscription != null) {\n        // This is for RN <= 0.64 - 65 and greater no longer have removeSubscription\n        super.removeSubscription(subscription);\n      } else if (originalRemove != null) {\n        // This is for RN >= 0.65\n        originalRemove();\n      }\n    };\n    subscription.remove = newRemove;\n    return subscription;\n  }\n  removeAllListeners(eventType) {\n    RNFBAppModule.eventsRemoveListener(eventType, true);\n    super.removeAllListeners(`rnfb_${eventType}`);\n  }\n\n  // This is likely no longer ever called, but it is here for backwards compatibility with RN <= 0.64\n  removeSubscription(subscription) {\n    RNFBAppModule.eventsRemoveListener(subscription.eventType.replace('rnfb_'), false);\n    if (super.removeSubscription) {\n      super.removeSubscription(subscription);\n    }\n  }\n}\nexport default new RNFBNativeEventEmitter();","map":{"version":3,"names":["NativeEventEmitter","NativeModules","RNFBAppModule","RNFBNativeEventEmitter","constructor","ready","addListener","eventType","listener","context","eventsNotifyReady","eventsAddListener","subscription","originalRemove","remove","newRemove","eventsRemoveListener","removeSubscription","removeAllListeners","replace"],"sources":["/Users/pauldionisio/Documents/CS/utak/utak-exam-app/node_modules/@react-native-firebase/app/lib/internal/RNFBNativeEventEmitter.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { NativeEventEmitter, NativeModules } from 'react-native';\n\nconst { RNFBAppModule } = NativeModules;\n\nclass RNFBNativeEventEmitter extends NativeEventEmitter {\n  constructor() {\n    super(RNFBAppModule);\n    this.ready = false;\n  }\n\n  addListener(eventType, listener, context) {\n    if (!this.ready) {\n      RNFBAppModule.eventsNotifyReady(true);\n      this.ready = true;\n    }\n    RNFBAppModule.eventsAddListener(eventType);\n\n    let subscription = super.addListener(`rnfb_${eventType}`, listener, context);\n\n    // React Native 0.65+ altered EventEmitter:\n    // - removeSubscription is gone\n    // - addListener returns an unsubscriber instead of a more complex object with eventType etc\n\n    // make sure eventType for backwards compatibility just in case\n    subscription.eventType = `rnfb_${eventType}`;\n\n    // New style is to return a remove function on the object, just in csae people call that,\n    // we will modify it to do our native unsubscription then call the original\n    let originalRemove = subscription.remove;\n    let newRemove = () => {\n      RNFBAppModule.eventsRemoveListener(eventType, false);\n      if (super.removeSubscription != null) {\n        // This is for RN <= 0.64 - 65 and greater no longer have removeSubscription\n        super.removeSubscription(subscription);\n      } else if (originalRemove != null) {\n        // This is for RN >= 0.65\n        originalRemove();\n      }\n    };\n    subscription.remove = newRemove;\n    return subscription;\n  }\n\n  removeAllListeners(eventType) {\n    RNFBAppModule.eventsRemoveListener(eventType, true);\n    super.removeAllListeners(`rnfb_${eventType}`);\n  }\n\n  // This is likely no longer ever called, but it is here for backwards compatibility with RN <= 0.64\n  removeSubscription(subscription) {\n    RNFBAppModule.eventsRemoveListener(subscription.eventType.replace('rnfb_'), false);\n    if (super.removeSubscription) {\n      super.removeSubscription(subscription);\n    }\n  }\n}\n\nexport default new RNFBNativeEventEmitter();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,kBAAkB,EAAEC,aAAa,QAAQ,cAAc;AAEhE,MAAM;EAAEC;AAAc,CAAC,GAAGD,aAAa;AAEvC,MAAME,sBAAsB,SAASH,kBAAkB,CAAC;EACtDI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAACF,aAAa,CAAC;IACpB,IAAI,CAACG,KAAK,GAAG,KAAK;EACpB;EAEAC,WAAWA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,EAAE;IACxC,IAAI,CAAC,IAAI,CAACJ,KAAK,EAAE;MACfH,aAAa,CAACQ,iBAAiB,CAAC,IAAI,CAAC;MACrC,IAAI,CAACL,KAAK,GAAG,IAAI;IACnB;IACAH,aAAa,CAACS,iBAAiB,CAACJ,SAAS,CAAC;IAE1C,IAAIK,YAAY,GAAG,KAAK,CAACN,WAAW,CAAE,QAAOC,SAAU,EAAC,EAAEC,QAAQ,EAAEC,OAAO,CAAC;;IAE5E;IACA;IACA;;IAEA;IACAG,YAAY,CAACL,SAAS,GAAI,QAAOA,SAAU,EAAC;;IAE5C;IACA;IACA,IAAIM,cAAc,GAAGD,YAAY,CAACE,MAAM;IACxC,IAAIC,SAAS,GAAGA,CAAA,KAAM;MACpBb,aAAa,CAACc,oBAAoB,CAACT,SAAS,EAAE,KAAK,CAAC;MACpD,IAAI,KAAK,CAACU,kBAAkB,IAAI,IAAI,EAAE;QACpC;QACA,KAAK,CAACA,kBAAkB,CAACL,YAAY,CAAC;MACxC,CAAC,MAAM,IAAIC,cAAc,IAAI,IAAI,EAAE;QACjC;QACAA,cAAc,CAAC,CAAC;MAClB;IACF,CAAC;IACDD,YAAY,CAACE,MAAM,GAAGC,SAAS;IAC/B,OAAOH,YAAY;EACrB;EAEAM,kBAAkBA,CAACX,SAAS,EAAE;IAC5BL,aAAa,CAACc,oBAAoB,CAACT,SAAS,EAAE,IAAI,CAAC;IACnD,KAAK,CAACW,kBAAkB,CAAE,QAAOX,SAAU,EAAC,CAAC;EAC/C;;EAEA;EACAU,kBAAkBA,CAACL,YAAY,EAAE;IAC/BV,aAAa,CAACc,oBAAoB,CAACJ,YAAY,CAACL,SAAS,CAACY,OAAO,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC;IAClF,IAAI,KAAK,CAACF,kBAAkB,EAAE;MAC5B,KAAK,CAACA,kBAAkB,CAACL,YAAY,CAAC;IACxC;EACF;AACF;AAEA,eAAe,IAAIT,sBAAsB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}