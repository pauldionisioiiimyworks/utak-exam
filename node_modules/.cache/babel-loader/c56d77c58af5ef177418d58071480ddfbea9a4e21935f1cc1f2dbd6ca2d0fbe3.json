{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport FirestoreDocumentSnapshot from './FirestoreDocumentSnapshot';\nconst TYPE_MAP = {\n  a: 'added',\n  m: 'modified',\n  r: 'removed'\n};\nexport default class FirestoreDocumentChange {\n  constructor(firestore, nativeData) {\n    this._firestore = firestore;\n    this._nativeData = nativeData;\n    this._isMetadataChange = nativeData.isMetadataChange;\n  }\n  get doc() {\n    return new FirestoreDocumentSnapshot(this._firestore, this._nativeData.doc);\n  }\n  get newIndex() {\n    return this._nativeData.ni;\n  }\n  get oldIndex() {\n    return this._nativeData.oi;\n  }\n  get type() {\n    return TYPE_MAP[this._nativeData.type];\n  }\n}","map":{"version":3,"names":["FirestoreDocumentSnapshot","TYPE_MAP","a","m","r","FirestoreDocumentChange","constructor","firestore","nativeData","_firestore","_nativeData","_isMetadataChange","isMetadataChange","doc","newIndex","ni","oldIndex","oi","type"],"sources":["/Users/pauldionisio/Documents/CS/utak/utak-exam-app/node_modules/@react-native-firebase/firestore/lib/FirestoreDocumentChange.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport FirestoreDocumentSnapshot from './FirestoreDocumentSnapshot';\n\nconst TYPE_MAP = {\n  a: 'added',\n  m: 'modified',\n  r: 'removed',\n};\n\nexport default class FirestoreDocumentChange {\n  constructor(firestore, nativeData) {\n    this._firestore = firestore;\n    this._nativeData = nativeData;\n    this._isMetadataChange = nativeData.isMetadataChange;\n  }\n\n  get doc() {\n    return new FirestoreDocumentSnapshot(this._firestore, this._nativeData.doc);\n  }\n\n  get newIndex() {\n    return this._nativeData.ni;\n  }\n\n  get oldIndex() {\n    return this._nativeData.oi;\n  }\n\n  get type() {\n    return TYPE_MAP[this._nativeData.type];\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,yBAAyB,MAAM,6BAA6B;AAEnE,MAAMC,QAAQ,GAAG;EACfC,CAAC,EAAE,OAAO;EACVC,CAAC,EAAE,UAAU;EACbC,CAAC,EAAE;AACL,CAAC;AAED,eAAe,MAAMC,uBAAuB,CAAC;EAC3CC,WAAWA,CAACC,SAAS,EAAEC,UAAU,EAAE;IACjC,IAAI,CAACC,UAAU,GAAGF,SAAS;IAC3B,IAAI,CAACG,WAAW,GAAGF,UAAU;IAC7B,IAAI,CAACG,iBAAiB,GAAGH,UAAU,CAACI,gBAAgB;EACtD;EAEA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,IAAIb,yBAAyB,CAAC,IAAI,CAACS,UAAU,EAAE,IAAI,CAACC,WAAW,CAACG,GAAG,CAAC;EAC7E;EAEA,IAAIC,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACJ,WAAW,CAACK,EAAE;EAC5B;EAEA,IAAIC,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACN,WAAW,CAACO,EAAE;EAC5B;EAEA,IAAIC,IAAIA,CAAA,EAAG;IACT,OAAOjB,QAAQ,CAAC,IAAI,CAACS,WAAW,CAACQ,IAAI,CAAC;EACxC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}