{"ast":null,"code":"import { isString, isNull, isUndefined, isArray } from '@react-native-firebase/app/lib/common';\nimport { fromDotSeparatedString } from './FirestoreFieldPath';\nimport { generateNativeData } from './utils/serialize';\nimport { OPERATORS } from './FirestoreQueryModifiers';\nconst AND_QUERY = 'AND';\nconst OR_QUERY = 'OR';\nexport function Filter(fieldPath, operator, value) {\n  return new _Filter(fieldPath, operator, value);\n}\nexport function _Filter(fieldPath, operator, value, filterOperator, queries) {\n  if ([AND_QUERY, OR_QUERY].includes(filterOperator)) {\n    // AND or OR Filter (list of Filters)\n    this.operator = filterOperator;\n    this.queries = queries;\n    this._toMap = function _toMap() {\n      return {\n        operator: this.operator,\n        queries: this.queries.map(query => query._toMap())\n      };\n    };\n    return this;\n  } else {\n    // Filter\n    this.fieldPath = fieldPath;\n    this.operator = operator;\n    this.value = value;\n    this._toMap = function _toMap() {\n      return {\n        fieldPath: this.fieldPath,\n        operator: this.operator,\n        value: this.value\n      };\n    };\n    return this;\n  }\n}\nFilter.and = function and(...queries) {\n  if (queries.length > 10 || queries.length < 2) {\n    throw new Error(`Expected 2-10 instances of Filter, but got ${queries.length} Filters`);\n  }\n  const validateFilters = queries.every(filter => filter instanceof _Filter);\n  if (!validateFilters) {\n    throw new Error('Expected every argument to be an instance of Filter');\n  }\n  return new _Filter(null, null, null, AND_QUERY, queries);\n};\nfunction hasOrOperator(obj) {\n  return obj.operator === 'OR' || Array.isArray(obj.queries) && obj.queries.some(hasOrOperator);\n}\nFilter.or = function or(...queries) {\n  if (queries.length > 10 || queries.length < 2) {\n    throw new Error(`Expected 2-10 instances of Filter, but got ${queries.length} Filters`);\n  }\n  const validateFilters = queries.every(filter => filter instanceof _Filter);\n  if (!validateFilters) {\n    throw new Error('Expected every argument to be an instance of Filter');\n  }\n  const hasOr = queries.some(hasOrOperator);\n  if (hasOr) {\n    throw new Error('OR Filters with nested OR Filters are not supported');\n  }\n  return new _Filter(null, null, null, OR_QUERY, queries);\n};\nfunction mapFieldQuery({\n  fieldPath,\n  operator,\n  value,\n  queries\n}, modifiers) {\n  if (operator === AND_QUERY || operator === OR_QUERY) {\n    return {\n      operator,\n      queries: queries.map(filter => mapFieldQuery(filter, modifiers))\n    };\n  }\n  let path;\n  if (isString(fieldPath)) {\n    try {\n      path = fromDotSeparatedString(fieldPath);\n    } catch (e) {\n      throw new Error(`first argument of Filter(*,_ , _) 'fieldPath' ${e.message}.`);\n    }\n  } else {\n    path = fieldPath;\n  }\n  if (!modifiers.isValidOperator(operator)) {\n    throw new Error(\"second argument of Filter(*,_ , _) 'opStr' is invalid. Expected one of '==', '>', '>=', '<', '<=', '!=', 'array-contains', 'not-in', 'array-contains-any' or 'in'.\");\n  }\n  if (isUndefined(value)) {\n    throw new Error(\"third argument of Filter(*,_ , _) 'value' argument expected.\");\n  }\n  if (isNull(value) && !modifiers.isEqualOperator(operator) && !modifiers.isNotEqualOperator(operator)) {\n    throw new Error(\"third argument of Filter(*,_ , _) 'value' is invalid. You can only perform equals comparisons on null\");\n  }\n  if (modifiers.isInOperator(operator)) {\n    if (!isArray(value) || !value.length) {\n      throw new Error(`third argument of Filter(*,_ , _) 'value' is invalid. A non-empty array is required for '${operator}' filters.`);\n    }\n    if (value.length > 10) {\n      throw new Error(`third argument of Filter(*,_ , _) 'value' is invalid. '${operator}' filters support a maximum of 10 elements in the value array.`);\n    }\n  }\n  return {\n    fieldPath: path,\n    operator: OPERATORS[operator],\n    value: generateNativeData(value, true)\n  };\n}\nexport function generateFilters(filter, modifiers) {\n  const filterMap = filter._toMap();\n  const queriesMaps = filterMap.queries.map(filter => mapFieldQuery(filter, modifiers));\n  return {\n    operator: filterMap.operator,\n    queries: queriesMaps\n  };\n}","map":{"version":3,"names":["isString","isNull","isUndefined","isArray","fromDotSeparatedString","generateNativeData","OPERATORS","AND_QUERY","OR_QUERY","Filter","fieldPath","operator","value","_Filter","filterOperator","queries","includes","_toMap","map","query","and","length","Error","validateFilters","every","filter","hasOrOperator","obj","Array","some","or","hasOr","mapFieldQuery","modifiers","path","e","message","isValidOperator","isEqualOperator","isNotEqualOperator","isInOperator","generateFilters","filterMap","queriesMaps"],"sources":["/Users/pauldionisio/Documents/CS/utak/utak-exam-app/node_modules/@react-native-firebase/firestore/lib/FirestoreFilter.js"],"sourcesContent":["import { isString, isNull, isUndefined, isArray } from '@react-native-firebase/app/lib/common';\nimport { fromDotSeparatedString } from './FirestoreFieldPath';\nimport { generateNativeData } from './utils/serialize';\nimport { OPERATORS } from './FirestoreQueryModifiers';\nconst AND_QUERY = 'AND';\nconst OR_QUERY = 'OR';\n\nexport function Filter(fieldPath, operator, value) {\n  return new _Filter(fieldPath, operator, value);\n}\n\nexport function _Filter(fieldPath, operator, value, filterOperator, queries) {\n  if ([AND_QUERY, OR_QUERY].includes(filterOperator)) {\n    // AND or OR Filter (list of Filters)\n    this.operator = filterOperator;\n    this.queries = queries;\n\n    this._toMap = function _toMap() {\n      return {\n        operator: this.operator,\n        queries: this.queries.map(query => query._toMap()),\n      };\n    };\n\n    return this;\n  } else {\n    // Filter\n    this.fieldPath = fieldPath;\n    this.operator = operator;\n    this.value = value;\n\n    this._toMap = function _toMap() {\n      return {\n        fieldPath: this.fieldPath,\n        operator: this.operator,\n        value: this.value,\n      };\n    };\n\n    return this;\n  }\n}\n\nFilter.and = function and(...queries) {\n  if (queries.length > 10 || queries.length < 2) {\n    throw new Error(`Expected 2-10 instances of Filter, but got ${queries.length} Filters`);\n  }\n\n  const validateFilters = queries.every(filter => filter instanceof _Filter);\n\n  if (!validateFilters) {\n    throw new Error('Expected every argument to be an instance of Filter');\n  }\n\n  return new _Filter(null, null, null, AND_QUERY, queries);\n};\n\nfunction hasOrOperator(obj) {\n  return obj.operator === 'OR' || (Array.isArray(obj.queries) && obj.queries.some(hasOrOperator));\n}\n\nFilter.or = function or(...queries) {\n  if (queries.length > 10 || queries.length < 2) {\n    throw new Error(`Expected 2-10 instances of Filter, but got ${queries.length} Filters`);\n  }\n\n  const validateFilters = queries.every(filter => filter instanceof _Filter);\n\n  if (!validateFilters) {\n    throw new Error('Expected every argument to be an instance of Filter');\n  }\n\n  const hasOr = queries.some(hasOrOperator);\n\n  if (hasOr) {\n    throw new Error('OR Filters with nested OR Filters are not supported');\n  }\n\n  return new _Filter(null, null, null, OR_QUERY, queries);\n};\n\nfunction mapFieldQuery({ fieldPath, operator, value, queries }, modifiers) {\n  if (operator === AND_QUERY || operator === OR_QUERY) {\n    return {\n      operator,\n      queries: queries.map(filter => mapFieldQuery(filter, modifiers)),\n    };\n  }\n\n  let path;\n  if (isString(fieldPath)) {\n    try {\n      path = fromDotSeparatedString(fieldPath);\n    } catch (e) {\n      throw new Error(`first argument of Filter(*,_ , _) 'fieldPath' ${e.message}.`);\n    }\n  } else {\n    path = fieldPath;\n  }\n\n  if (!modifiers.isValidOperator(operator)) {\n    throw new Error(\n      \"second argument of Filter(*,_ , _) 'opStr' is invalid. Expected one of '==', '>', '>=', '<', '<=', '!=', 'array-contains', 'not-in', 'array-contains-any' or 'in'.\",\n    );\n  }\n\n  if (isUndefined(value)) {\n    throw new Error(\"third argument of Filter(*,_ , _) 'value' argument expected.\");\n  }\n\n  if (\n    isNull(value) &&\n    !modifiers.isEqualOperator(operator) &&\n    !modifiers.isNotEqualOperator(operator)\n  ) {\n    throw new Error(\n      \"third argument of Filter(*,_ , _) 'value' is invalid. You can only perform equals comparisons on null\",\n    );\n  }\n\n  if (modifiers.isInOperator(operator)) {\n    if (!isArray(value) || !value.length) {\n      throw new Error(\n        `third argument of Filter(*,_ , _) 'value' is invalid. A non-empty array is required for '${operator}' filters.`,\n      );\n    }\n\n    if (value.length > 10) {\n      throw new Error(\n        `third argument of Filter(*,_ , _) 'value' is invalid. '${operator}' filters support a maximum of 10 elements in the value array.`,\n      );\n    }\n  }\n\n  return {\n    fieldPath: path,\n    operator: OPERATORS[operator],\n    value: generateNativeData(value, true),\n  };\n}\n\nexport function generateFilters(filter, modifiers) {\n  const filterMap = filter._toMap();\n\n  const queriesMaps = filterMap.queries.map(filter => mapFieldQuery(filter, modifiers));\n\n  return {\n    operator: filterMap.operator,\n    queries: queriesMaps,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}