{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Platform } from 'react-native';\nimport Base64 from './Base64';\nimport { isString } from './validate';\nexport * from './id';\nexport * from './path';\nexport * from './promise';\nexport * from './validate';\nexport { default as Base64 } from './Base64';\nexport { default as ReferenceBase } from './ReferenceBase';\nexport function getDataUrlParts(dataUrlString) {\n  const isBase64 = dataUrlString.includes(';base64');\n  let [mediaType, base64String] = dataUrlString.split(',');\n  if (!mediaType || !base64String) {\n    return {\n      base64String: undefined,\n      mediaType: undefined\n    };\n  }\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n  return {\n    base64String,\n    mediaType\n  };\n}\nexport function once(fn, context) {\n  let onceResult;\n  let ranOnce = false;\n  return function onceInner(...args) {\n    if (!ranOnce) {\n      ranOnce = true;\n      onceResult = fn.apply(context || this, args);\n    }\n    return onceResult;\n  };\n}\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n  return value instanceof Error;\n}\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\n\n/**\n * Remove a trailing forward slash from a string if it exists\n *\n * @param string\n * @returns {*}\n */\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\nexport const isIOS = Platform.OS === 'ios';\nexport const isAndroid = Platform.OS === 'android';\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (jsonError) {\n    return string;\n  }\n}\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (jsonError) {\n    return null;\n  }\n}","map":{"version":3,"names":["Platform","Base64","isString","default","ReferenceBase","getDataUrlParts","dataUrlString","isBase64","includes","mediaType","base64String","split","undefined","replace","decodeURIComponent","btoa","once","fn","context","onceResult","ranOnce","onceInner","args","apply","isError","value","Object","prototype","toString","call","Error","hasOwnProperty","target","property","stripTrailingSlash","string","endsWith","slice","isIOS","OS","isAndroid","tryJSONParse","JSON","parse","jsonError","tryJSONStringify","data","stringify"],"sources":["/Users/pauldionisio/Documents/CS/utak/utak-exam-app/node_modules/@react-native-firebase/app/lib/common/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Platform } from 'react-native';\nimport Base64 from './Base64';\nimport { isString } from './validate';\n\nexport * from './id';\nexport * from './path';\nexport * from './promise';\nexport * from './validate';\n\nexport { default as Base64 } from './Base64';\nexport { default as ReferenceBase } from './ReferenceBase';\n\nexport function getDataUrlParts(dataUrlString) {\n  const isBase64 = dataUrlString.includes(';base64');\n  let [mediaType, base64String] = dataUrlString.split(',');\n  if (!mediaType || !base64String) {\n    return { base64String: undefined, mediaType: undefined };\n  }\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n  return { base64String, mediaType };\n}\n\nexport function once(fn, context) {\n  let onceResult;\n  let ranOnce = false;\n\n  return function onceInner(...args) {\n    if (!ranOnce) {\n      ranOnce = true;\n      onceResult = fn.apply(context || this, args);\n    }\n\n    return onceResult;\n  };\n}\n\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n\n  return value instanceof Error;\n}\n\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\n\n/**\n * Remove a trailing forward slash from a string if it exists\n *\n * @param string\n * @returns {*}\n */\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\n\nexport const isIOS = Platform.OS === 'ios';\n\nexport const isAndroid = Platform.OS === 'android';\n\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (jsonError) {\n    return string;\n  }\n}\n\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (jsonError) {\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}