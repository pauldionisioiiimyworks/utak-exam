{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFinite, isNumber, isUndefined } from '@react-native-firebase/app/lib/common';\nexport default class FirestoreGeoPoint {\n  constructor(latitude, longitude) {\n    if (isUndefined(latitude) || isUndefined(longitude)) {\n      throw new Error('firebase.firestore.GeoPoint constructor expected latitude and longitude values.');\n    }\n    if (!isNumber(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n    if (!isNumber(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(`firebase.firestore.GeoPoint 'latitude' must be a number between -90 and 90, but was: ${latitude}.`);\n    }\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(`firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: ${longitude}.`);\n    }\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n  get latitude() {\n    return this._latitude;\n  }\n  get longitude() {\n    return this._longitude;\n  }\n  isEqual(other) {\n    if (!(other instanceof FirestoreGeoPoint)) {\n      throw new Error(\"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\");\n    }\n    return this._latitude === other._latitude && this._longitude === other._longitude;\n  }\n  toJSON() {\n    return {\n      latitude: this._latitude,\n      longitude: this._longitude\n    };\n  }\n}","map":{"version":3,"names":["isFinite","isNumber","isUndefined","FirestoreGeoPoint","constructor","latitude","longitude","Error","_latitude","_longitude","isEqual","other","toJSON"],"sources":["/Users/pauldionisio/Documents/CS/utak/utak-exam-app/node_modules/@react-native-firebase/firestore/lib/FirestoreGeoPoint.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFinite, isNumber, isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreGeoPoint {\n  constructor(latitude, longitude) {\n    if (isUndefined(latitude) || isUndefined(longitude)) {\n      throw new Error(\n        'firebase.firestore.GeoPoint constructor expected latitude and longitude values.',\n      );\n    }\n\n    if (!isNumber(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n\n    if (!isNumber(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'latitude' must be a number between -90 and 90, but was: ${latitude}.`,\n      );\n    }\n\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: ${longitude}.`,\n      );\n    }\n\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreGeoPoint)) {\n      throw new Error(\n        \"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\",\n      );\n    }\n\n    return this._latitude === other._latitude && this._longitude === other._longitude;\n  }\n\n  toJSON() {\n    return {\n      latitude: this._latitude,\n      longitude: this._longitude,\n    };\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,uCAAuC;AAEvF,eAAe,MAAMC,iBAAiB,CAAC;EACrCC,WAAWA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAC/B,IAAIJ,WAAW,CAACG,QAAQ,CAAC,IAAIH,WAAW,CAACI,SAAS,CAAC,EAAE;MACnD,MAAM,IAAIC,KAAK,CACb,iFACF,CAAC;IACH;IAEA,IAAI,CAACN,QAAQ,CAACI,QAAQ,CAAC,EAAE;MACvB,MAAM,IAAIE,KAAK,CAAC,gEAAgE,CAAC;IACnF;IAEA,IAAI,CAACN,QAAQ,CAACK,SAAS,CAAC,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,iEAAiE,CAAC;IACpF;IAEA,IAAI,CAACP,QAAQ,CAACK,QAAQ,CAAC,IAAIA,QAAQ,GAAG,CAAC,EAAE,IAAIA,QAAQ,GAAG,EAAE,EAAE;MAC1D,MAAM,IAAIE,KAAK,CACZ,wFAAuFF,QAAS,GACnG,CAAC;IACH;IAEA,IAAI,CAACL,QAAQ,CAACM,SAAS,CAAC,IAAIA,SAAS,GAAG,CAAC,GAAG,IAAIA,SAAS,GAAG,GAAG,EAAE;MAC/D,MAAM,IAAIC,KAAK,CACZ,2FAA0FD,SAAU,GACvG,CAAC;IACH;IAEA,IAAI,CAACE,SAAS,GAAGH,QAAQ;IACzB,IAAI,CAACI,UAAU,GAAGH,SAAS;EAC7B;EAEA,IAAID,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACG,SAAS;EACvB;EAEA,IAAIF,SAASA,CAAA,EAAG;IACd,OAAO,IAAI,CAACG,UAAU;EACxB;EAEAC,OAAOA,CAACC,KAAK,EAAE;IACb,IAAI,EAAEA,KAAK,YAAYR,iBAAiB,CAAC,EAAE;MACzC,MAAM,IAAII,KAAK,CACb,kFACF,CAAC;IACH;IAEA,OAAO,IAAI,CAACC,SAAS,KAAKG,KAAK,CAACH,SAAS,IAAI,IAAI,CAACC,UAAU,KAAKE,KAAK,CAACF,UAAU;EACnF;EAEAG,MAAMA,CAAA,EAAG;IACP,OAAO;MACLP,QAAQ,EAAE,IAAI,CAACG,SAAS;MACxBF,SAAS,EAAE,IAAI,CAACG;IAClB,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}