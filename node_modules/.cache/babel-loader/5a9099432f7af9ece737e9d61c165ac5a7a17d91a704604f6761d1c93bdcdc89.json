{"ast":null,"code":"/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject, isString, isUndefined } from '@react-native-firebase/app/lib/common';\nimport NativeError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\nimport { parseSetOptions, parseSnapshotArgs, parseUpdateArgs } from './utils';\nimport { buildNativeMap, provideDocumentReferenceClass } from './utils/serialize';\n\n// To avoid React Native require cycle warnings\nlet FirestoreCollectionReference = null;\nexport function provideCollectionReferenceClass(collectionReference) {\n  FirestoreCollectionReference = collectionReference;\n}\nlet FirestoreDocumentSnapshot = null;\nexport function provideDocumentSnapshotClass(documentSnapshot) {\n  FirestoreDocumentSnapshot = documentSnapshot;\n}\nlet _id = 0;\nexport default class FirestoreDocumentReference {\n  constructor(firestore, documentPath) {\n    this._firestore = firestore;\n    this._documentPath = documentPath;\n  }\n  get firestore() {\n    return this._firestore;\n  }\n  get id() {\n    return this._documentPath.id;\n  }\n  get parent() {\n    const parentPath = this._documentPath.parent();\n    return new FirestoreCollectionReference(this._firestore, parentPath);\n  }\n  get path() {\n    return this._documentPath.relativeName;\n  }\n  collection(collectionPath) {\n    if (!isString(collectionPath)) {\n      throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must be a string value.\");\n    }\n    if (collectionPath === '') {\n      throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must be a non-empty string.\");\n    }\n    const path = this._documentPath.child(collectionPath);\n    if (!path.isCollection) {\n      throw new Error(\"firebase.firestore().doc().collection(*) 'collectionPath' must point to a collection.\");\n    }\n    return new FirestoreCollectionReference(this._firestore, path);\n  }\n  delete() {\n    return this._firestore.native.documentDelete(this.path);\n  }\n  get(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\"firebase.firestore().doc().get(*) 'options' must be an object is provided.\");\n    }\n    if (options && options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n      throw new Error(\"firebase.firestore().doc().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\");\n    }\n    return this._firestore.native.documentGet(this.path, options).then(data => new FirestoreDocumentSnapshot(this._firestore, data));\n  }\n  isEqual(other) {\n    if (!(other instanceof FirestoreDocumentReference)) {\n      throw new Error(\"firebase.firestore().doc().isEqual(*) 'other' expected a DocumentReference instance.\");\n    }\n    return !(this.path !== other.path || this.firestore.app.name !== other.firestore.app.name || this.firestore.app.options.projectId !== other.firestore.app.options.projectId);\n  }\n  onSnapshot(...args) {\n    let snapshotListenOptions;\n    let callback;\n    let onNext;\n    let onError;\n    try {\n      const options = parseSnapshotArgs(args);\n      snapshotListenOptions = options.snapshotListenOptions;\n      callback = options.callback;\n      onNext = options.onNext;\n      onError = options.onError;\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().onSnapshot(*) ${e.message}`);\n    }\n    function handleSuccess(documentSnapshot) {\n      callback(documentSnapshot, null);\n      onNext(documentSnapshot);\n    }\n    function handleError(error) {\n      callback(null, error);\n      onError(error);\n    }\n    const listenerId = _id++;\n    const onSnapshotSubscription = this._firestore.emitter.addListener(this._firestore.eventNameForApp(`firestore_document_sync_event:${listenerId}`), event => {\n      if (event.body.error) {\n        handleError(NativeError.fromEvent(event.body.error, 'firestore'));\n      } else {\n        const documentSnapshot = new FirestoreDocumentSnapshot(this._firestore, event.body.snapshot);\n        handleSuccess(documentSnapshot);\n      }\n    });\n    const unsubscribe = () => {\n      onSnapshotSubscription.remove();\n      this._firestore.native.documentOffSnapshot(listenerId);\n    };\n    this._firestore.native.documentOnSnapshot(this.path, listenerId, snapshotListenOptions);\n    return unsubscribe;\n  }\n  set(data, options) {\n    if (!isObject(data)) {\n      throw new Error(\"firebase.firestore().doc().set(*) 'data' must be an object.\");\n    }\n    let setOptions;\n    try {\n      setOptions = parseSetOptions(options);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().set(_, *) ${e.message}.`);\n    }\n    return this._firestore.native.documentSet(this.path, buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties), setOptions);\n  }\n  update(...args) {\n    if (args.length === 0) {\n      throw new Error('firebase.firestore().doc().update(*) expected at least 1 argument but was called with 0 arguments.');\n    }\n    let data;\n    try {\n      data = parseUpdateArgs(args);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().update(*) ${e.message}`);\n    }\n    return this._firestore.native.documentUpdate(this.path, buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties));\n  }\n}\nprovideDocumentReferenceClass(FirestoreDocumentReference); // serialize","map":{"version":3,"names":["isObject","isString","isUndefined","NativeError","parseSetOptions","parseSnapshotArgs","parseUpdateArgs","buildNativeMap","provideDocumentReferenceClass","FirestoreCollectionReference","provideCollectionReferenceClass","collectionReference","FirestoreDocumentSnapshot","provideDocumentSnapshotClass","documentSnapshot","_id","FirestoreDocumentReference","constructor","firestore","documentPath","_firestore","_documentPath","id","parent","parentPath","path","relativeName","collection","collectionPath","Error","child","isCollection","delete","native","documentDelete","get","options","source","documentGet","then","data","isEqual","other","app","name","projectId","onSnapshot","args","snapshotListenOptions","callback","onNext","onError","e","message","handleSuccess","handleError","error","listenerId","onSnapshotSubscription","emitter","addListener","eventNameForApp","event","body","fromEvent","snapshot","unsubscribe","remove","documentOffSnapshot","documentOnSnapshot","set","setOptions","documentSet","_settings","ignoreUndefinedProperties","update","length","documentUpdate"],"sources":["/Users/pauldionisio/Documents/CS/utak/utak-exam-app/node_modules/@react-native-firebase/firestore/lib/FirestoreDocumentReference.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject, isString, isUndefined } from '@react-native-firebase/app/lib/common';\nimport NativeError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\nimport { parseSetOptions, parseSnapshotArgs, parseUpdateArgs } from './utils';\nimport { buildNativeMap, provideDocumentReferenceClass } from './utils/serialize';\n\n// To avoid React Native require cycle warnings\nlet FirestoreCollectionReference = null;\nexport function provideCollectionReferenceClass(collectionReference) {\n  FirestoreCollectionReference = collectionReference;\n}\n\nlet FirestoreDocumentSnapshot = null;\nexport function provideDocumentSnapshotClass(documentSnapshot) {\n  FirestoreDocumentSnapshot = documentSnapshot;\n}\n\nlet _id = 0;\n\nexport default class FirestoreDocumentReference {\n  constructor(firestore, documentPath) {\n    this._firestore = firestore;\n    this._documentPath = documentPath;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get id() {\n    return this._documentPath.id;\n  }\n\n  get parent() {\n    const parentPath = this._documentPath.parent();\n    return new FirestoreCollectionReference(this._firestore, parentPath);\n  }\n\n  get path() {\n    return this._documentPath.relativeName;\n  }\n\n  collection(collectionPath) {\n    if (!isString(collectionPath)) {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must be a string value.\",\n      );\n    }\n\n    if (collectionPath === '') {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must be a non-empty string.\",\n      );\n    }\n\n    const path = this._documentPath.child(collectionPath);\n\n    if (!path.isCollection) {\n      throw new Error(\n        \"firebase.firestore().doc().collection(*) 'collectionPath' must point to a collection.\",\n      );\n    }\n\n    return new FirestoreCollectionReference(this._firestore, path);\n  }\n\n  delete() {\n    return this._firestore.native.documentDelete(this.path);\n  }\n\n  get(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\"firebase.firestore().doc().get(*) 'options' must be an object is provided.\");\n    }\n\n    if (\n      options &&\n      options.source &&\n      options.source !== 'default' &&\n      options.source !== 'server' &&\n      options.source !== 'cache'\n    ) {\n      throw new Error(\n        \"firebase.firestore().doc().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\",\n      );\n    }\n\n    return this._firestore.native\n      .documentGet(this.path, options)\n      .then(data => new FirestoreDocumentSnapshot(this._firestore, data));\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreDocumentReference)) {\n      throw new Error(\n        \"firebase.firestore().doc().isEqual(*) 'other' expected a DocumentReference instance.\",\n      );\n    }\n\n    return !(\n      this.path !== other.path ||\n      this.firestore.app.name !== other.firestore.app.name ||\n      this.firestore.app.options.projectId !== other.firestore.app.options.projectId\n    );\n  }\n\n  onSnapshot(...args) {\n    let snapshotListenOptions;\n    let callback;\n    let onNext;\n    let onError;\n\n    try {\n      const options = parseSnapshotArgs(args);\n      snapshotListenOptions = options.snapshotListenOptions;\n      callback = options.callback;\n      onNext = options.onNext;\n      onError = options.onError;\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().onSnapshot(*) ${e.message}`);\n    }\n\n    function handleSuccess(documentSnapshot) {\n      callback(documentSnapshot, null);\n      onNext(documentSnapshot);\n    }\n\n    function handleError(error) {\n      callback(null, error);\n      onError(error);\n    }\n\n    const listenerId = _id++;\n\n    const onSnapshotSubscription = this._firestore.emitter.addListener(\n      this._firestore.eventNameForApp(`firestore_document_sync_event:${listenerId}`),\n      event => {\n        if (event.body.error) {\n          handleError(NativeError.fromEvent(event.body.error, 'firestore'));\n        } else {\n          const documentSnapshot = new FirestoreDocumentSnapshot(\n            this._firestore,\n            event.body.snapshot,\n          );\n          handleSuccess(documentSnapshot);\n        }\n      },\n    );\n\n    const unsubscribe = () => {\n      onSnapshotSubscription.remove();\n      this._firestore.native.documentOffSnapshot(listenerId);\n    };\n\n    this._firestore.native.documentOnSnapshot(this.path, listenerId, snapshotListenOptions);\n\n    return unsubscribe;\n  }\n\n  set(data, options) {\n    if (!isObject(data)) {\n      throw new Error(\"firebase.firestore().doc().set(*) 'data' must be an object.\");\n    }\n\n    let setOptions;\n    try {\n      setOptions = parseSetOptions(options);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().set(_, *) ${e.message}.`);\n    }\n\n    return this._firestore.native.documentSet(\n      this.path,\n      buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n      setOptions,\n    );\n  }\n\n  update(...args) {\n    if (args.length === 0) {\n      throw new Error(\n        'firebase.firestore().doc().update(*) expected at least 1 argument but was called with 0 arguments.',\n      );\n    }\n\n    let data;\n    try {\n      data = parseUpdateArgs(args);\n    } catch (e) {\n      throw new Error(`firebase.firestore().doc().update(*) ${e.message}`);\n    }\n\n    return this._firestore.native.documentUpdate(\n      this.path,\n      buildNativeMap(data, this._firestore._settings.ignoreUndefinedProperties),\n    );\n  }\n}\n\nprovideDocumentReferenceClass(FirestoreDocumentReference); // serialize\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}